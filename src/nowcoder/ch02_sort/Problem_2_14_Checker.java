package nowcoder.ch02_sort;

/**
 * *********小范围排序练习题****************
 * <p>
 * 请设计一个高效算法，判断数组中是否有重复值。必须保证额外空间复杂度为O(1)。
 * <p>
 * 给定一个int数组A及它的大小n，请返回它是否有重复值。
 * <p>
 * 测试样例： [1,2,3,4,5,5,6],7 返回：true
 * <p>
 * Created by Cyhui on 2017/8/9 0009.
 */
public class Problem_2_14_Checker {
    public boolean checkDuplicate(int[] arr) {
        if (arr == null || arr.length == 0) {
            return false;
        }
        heapSort(arr);
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] == arr[i - 1]) {
                return true;
            }
        }
        return false;
    }

    public void heapSort(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            heapInsert(arr, i);
        }
        for (int i = arr.length - 1; i != 0; i--) {
            swap(arr, 0, i);
            heapify(arr, 0, i);
        }
    }

    public void swap(int[] arr, int i, int i2) {
        int temp = arr[i];
        arr[i] = arr[i2];
        arr[i2] = temp;
    }

    public void heapInsert(int[] arr, int index) {
        while (index != 0) {
            int parent = (index - 1) / 2;
            if (arr[parent] < arr[index]) {
                swap(arr, parent, index);
                index = parent;
            } else {
                break;
            }
        }
    }

    // 大顶堆
    public void heapify(int[] arr, int index, int heapSize) {
        int left = index * 2 + 1;
        int right = index * 2 + 2;
        int largest = index;
        while (left < heapSize) {
            if (arr[left] > arr[index]) {
                largest = left;
            }
            if (right < heapSize && arr[right] > arr[largest]) {
                largest = right;
            }
            if (largest != index) {
                swap(arr, largest, index);
            } else {
                break;
            }
            index = largest;
            left = index * 2 + 1;
            right = index * 2 + 2;
        }
    }

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        Problem_2_14_Checker checker = new Problem_2_14_Checker();
        int[] arr = {860, 751, 1326, 8, 958, 304, 105, 1580, 204, 1315, 1385, 27, 755, 775, 1199, 1312, 1219, 328, 1212, 1067, 621, 497, 1443, 1096, 402, 1223, 33, 388, 1225, 968, 422, 1241, 928, 486, 1134, 1097, 618, 487, 1570, 277, 1430, 91, 1630, 1462, 1086, 1515, 391, 689, 864, 1249, 918, 1431, 253, 1550, 511, 209, 537, 640, 187, 1423, 1380, 9, 833, 234, 844, 211, 1355, 55, 588, 830, 849, 378, 1351, 481, 913, 1459, 700, 1190, 1473, 261, 188, 1144, 98, 536, 46, 421, 1614, 1323, 1248, 961, 1452, 1239, 538, 1472, 547, 360, 84, 930, 1208, 1266, 1038, 409, 1172, 386, 562, 619, 983, 213, 886, 1297, 221, 1465, 1354, 262, 427, 1615, 341, 127, 147, 764, 1439, 1040, 802, 762, 1205, 191, 1014, 1471, 1092, 770, 69, 726, 355, 1571, 1366, 933, 445, 377, 880, 460, 279, 1521, 1255, 1201, 926, 1066, 1269, 1032, 1106, 994, 643, 735, 813, 649, 1337, 1404, 1444, 465, 1023, 739, 540, 61, 63, 1402, 607, 786, 515, 1626, 1207, 581, 732, 1069, 1619, 1045, 1246, 1395, 1448, 721, 335, 1157, 1564, 1455, 245, 367, 6, 358, 294, 707, 608, 941, 623, 1063, 1054, 796, 4, 128, 1572, 1506, 851, 1075, 534, 703, 954, 83, 252, 1224, 682, 834, 1287, 789, 1634, 871, 1533, 361, 1338, 475, 1425, 1243, 1487, 1169, 1468, 568, 949, 1152, 1489, 420, 530, 927, 1528, 1513, 730, 96, 1460, 586, 1233, 156, 976, 1417, 558, 216, 95, 165, 199, 1182, 1071, 788, 985, 570, 690, 288, 356, 982, 1314, 1165, 1016, 400, 1057, 1398, 270, 601, 121, 553, 49, 1476, 685, 694, 1350, 167, 398, 1596, 1078, 269, 349, 645, 1538, 1163, 875, 1123, 815, 197, 1486, 48, 408, 1176, 1490, 793, 579, 374, 435, 5, 741, 652, 99, 468, 531, 1288, 637, 1319, 1029, 756, 1084, 965, 301, 447, 1597, 828, 19, 1289, 1267, 1211, 890, 306, 65, 456, 397, 633, 1497, 175, 1325, 1171, 229, 1537, 1540, 34, 577, 1447, 230, 655, 1027, 365, 7, 988, 651, 612, 1179, 635, 1093, 24, 1001, 439, 940, 260, 548, 463, 1485, 1478, 343, 1635, 1226, 907, 742, 1294, 583, 1432, 118, 1406, 457, 1228, 629, 1422, 1400, 972, 1590, 1307, 53, 135, 1112, 658, 383, 38, 1481, 293, 1628, 1298, 1164, 264, 825, 1376, 305, 887, 953, 381, 401, 110, 490, 246, 1505, 491, 117, 493, 1384, 1006, 914, 265, 296, 198, 957, 329, 508, 578, 955, 119, 169, 555, 754, 116, 1511, 410, 1581, 1480, 1399, 393, 1263, 1525, 164, 1091, 131, 1281, 1409, 1363, 971, 492, 1498, 1030, 314, 811, 956, 138, 746, 567, 502, 1053, 1627, 73, 500, 206, 1342, 868, 1618, 872, 1250, 822, 1301, 232, 1051, 155, 799, 1122, 1234, 1131, 1575, 669, 1582, 1600, 285, 1168, 1367, 757, 1469, 750, 1265, 1242, 1186, 1085, 259, 909, 419, 524, 1184, 1037, 691, 1162, 140, 630, 90, 1118, 274, 396, 1215, 978, 527, 379, 506, 87, 1569, 826, 1377, 803, 464, 326, 950, 991, 1279, 1270, 1173, 1278, 476, 203, 357, 609, 485, 505, 449, 272, 1405, 231, 1309, 1236, 1189, 89, 257, 352, 602, 613, 624, 686, 552, 1008, 711, 428, 708, 1522, 821, 951, 622, 159, 174, 995, 201, 1371, 778, 604, 1392, 444, 519, 1622, 1545, 891, 1436, 852, 441, 709, 423, 517, 202, 496, 878, 51, 934, 1491, 94, 1161, 368, 626, 688, 467, 1056, 227, 173, 412, 761, 81, 571, 56, 1130, 1542, 1633, 646, 1102, 1304, 283, 327, 989, 641, 986, 797, 342, 1504, 597, 1534, 1407, 1324, 313, 1381, 207, 14, 521, 37, 1418, 893, 566, 564, 1274, 1258, 1196, 675, 424, 922, 102, 1360, 364, 280, 668, 769, 945, 1554, 3, 1142, 1359, 41, 1217, 698, 1488, 1100, 776, 461, 479, 929, 939, 1466, 575, 323, 1147, 1361, 113, 111, 184, 1139, 1158, 942, 1271, 1477, 93, 745, 1003, 725, 627, 319, 1470, 1535, 29, 818, 495, 772, 254, 532, 936, 1015, 835, 291, 249, 1177, 256, 625, 1457, 1191, 551, 1358, 1445, 590, 148, 193, 22, 432, 1275, 359, 981, 814, 1523, 429, 712, 523, 426, 454, 904, 1202, 50, 31, 840, 268, 800, 970, 146, 384, 642, 752, 1002, 1479, 1125, 1463, 1159, 771, 1562, 1625, 380, 1044, 1308, 1565, 529, 1206, 1415, 1543, 406, 992, 663, 297, 854, 964, 582, 109, 899, 1047, 1098, 883, 182, 339, 190, 390, 1501, 812, 458, 1022, 861, 916, 792, 1349, 509, 1347, 64, 639, 284, 1601, 728, 1060, 1440, 0, 877, 471, 740, 1198, 215, 1514, 1282, 1546, 350, 23, 765, 823, 1070, 1260, 696, 1222, 1200, 638, 522, 734, 1039, 846, 1160, 528, 1330, 387, 616, 399, 832, 1428, 535, 150, 1065, 915, 489, 966, 1254, 714, 176, 115, 354, 656, 1272, 1247, 478, 560, 973, 1607, 1526, 1141, 1482, 124, 631, 838, 1327, 1197, 382, 1230, 273, 346, 518, 462, 1276, 15, 1178, 903, 58, 1346, 647, 660, 884, 1310, 747, 595, 952, 896, 853, 40, 340, 1591, 181, 1121, 842, 504, 1393, 888, 923, 1026, 1049, 724, 158, 318, 45, 26, 144, 831, 266, 1383, 557, 333, 36, 1433, 103, 657, 295, 132, 1140, 856, 1058, 331, 1421, 415, 1624, 1105, 75, 255, 125, 459, 179, 200, 71, 394, 142, 912, 993, 1556, 533, 494, 1213, 1635, 309, 1512, 733, 484, 610, 1474, 549, 1175, 938, 674, 1532, 451, 774, 418, 1483, 1064, 615, 473, 1181, 947, 240, 867, 1623, 1245, 474, 845, 1227, 21, 1292, 910, 59, 470, 1079, 1068, 768, 195, 925, 1185, 70, 542, 1333, 866, 1438, 681, 1441, 375, 1566, 1458, 239, 715, 1503, 1136, 722, 1238, 816, 759, 1132, 794, 403, 371, 1109, 693, 857, 1518, 362, 1419, 453, 1117, 650, 1107, 1348, 1475, 310, 178, 600, 97, 414, 275, 1563, 919, 1089, 336, 667, 303, 79, 1290, 52, 1128, 648, 748, 1352, 220, 1120, 1496, 791, 1296, 584, 1111, 591, 585, 743, 363, 1435, 160, 171, 1204, 672, 901, 1484, 129, 137, 543, 1454, 440, 1516, 157, 286, 948, 76, 843, 1530, 717, 1007, 241, 28, 1621, 723, 1631, 411, 122, 1154, 106, 334, 889, 900, 1329, 1382, 18, 1313, 1048, 1251, 32, 370, 1558, 781, 1632, 437, 541, 1299, 168, 987, 997, 1494, 104, 316, 920, 290, 1396, 345, 1286, 123, 438, 1605, 894, 312, 85, 1362, 718, 1237, 1527, 133, 108, 20, 580, 836, 1568, 1283, 405, 1322, 1183, 369, 477, 450, 554, 870, 719, 977, 1148, 662, 1576, 665, 238, 874, 222, 436, 1232, 760, 192, 806, 1194, 671, 824, 1041, 1610, 539, 1328, 1429, 1587, 1021, 895, 385, 325, 1332, 1357, 1397, 42, 753, 1203, 1146, 598, 1316, 695, 287, 702, 1507, 766, 1138, 701, 1020, 1510, 332, 545, 1087, 550, 676, 499, 683, 80, 967, 848, 1143, 1344, 1126, 1593, 263, 82, 984, 289, 921, 1574, 112, 510, 1306, 1061, 526, 1420, 251, 1149, 448, 659, 837, 1214, 512, 902, 810, 25, 780, 1129, 1389, 1174, 1115, 1103, 1153, 1114, 1013, 1192, 208, 1579, 66, 974, 1229, 666, 1524, 881, 1365, 699, 1320, 1331, 556, 593, 1133, 865, 407, 1300, 1499, 1609, 434, 1391, 946, 1043, 1375, 1426, 236, 1547, 1082, 804, 389, 1616, 1077, 1345, 1101, 1539, 574, 785, 1356, 425, 594, 126, 520, 596, 43, 1552, 237, 1099, 603, 11, 163, 351, 452, 763, 1414, 16, 413, 1598, 1145, 1210, 1339, 1449, 677, 86, 212, 1608, 60, 446, 1456, 1072, 807, 189, 599, 931, 68, 488, 863, 963, 172, 1553, 805, 1119, 1364, 1218, 1592, 561, 1536, 979, 88, 892, 12, 744, 1036, 141, 710, 620, 267, 809, 248, 120, 1104, 873, 1302, 783, 632, 784, 1150, 858, 210, 1595, 114, 1019, 1450, 1612, 937, 1262, 1050, 1221, 1461, 503, 1155, 697, 569, 969, 1090, 72, 1284, 1010, 855, 1253, 713, 228, 311, 572, 960, 1295, 525, 1370, 1031, 1256, 278, 1110, 143, 773, 787, 1442, 850, 999, 617, 1280, 1170, 606, 218, 395, 1559, 431, 795, 139, 324, 869, 317, 614, 998, 233, 1573, 736, 1025, 1094, 1252, 628, 1434, 1394, 692, 1018, 1604, 1603, 1073, 183, 1273, 67, 1011, 78, 54, 315, 576, 684, 817, 298, 1317, 185, 347, 101, 879, 1437, 829, 244, 152, 130, 670, 1602, 801, 1083, 862, 943, 782, 149, 1244, 282, 1555, 466, 1390, 376, 911, 344, 1594, 944, 1560, 975, 514, 917, 1388, 1343, 559, 1231, 1520, 1341, 1235, 416, 636, 136, 1340, 1589, 1311, 1531, 980, 898, 1424, 1124, 219, 247, 819, 935, 1427, 472, 1268, 841, 433, 1005, 337, 430, 1034, 35, 1374, 1156, 1508, 1369, 589, 820, 1080, 1386, 166, 1387, 455, 320, 1529, 798, 107, 62, 482, 1259, 644, 1017, 1464, 1318, 480, 897, 1519, 827, 74, 996, 1548, 214, 1617, 673, 330, 573, 565, 243, 1187, 1195, 779, 1584, 1216, 1493, 235, 1151, 1567, 1411, 1353, 1028, 1033, 1116, 1024, 353, 1088, 1557, 1055, 1004, 1551, 882, 161, 1517, 1035, 307, 153, 217, 1291, 654, 959, 373, 1500, 885, 705, 704, 242, 513, 372, 1257, 276, 1113, 1413, 1321, 194, 30, 839, 1606, 2, 749, 1135, 990, 1629, 196, 1577, 587, 1372, 1261, 1599, 1578, 57, 661, 605, 544, 154, 1277, 716, 392, 10, 417, 611, 1541, 469, 1, 226, 1108, 906, 1453, 908, 1373, 1368, 1544, 592, 664, 1336, 300, 932, 225, 77, 180, 653, 679, 302, 442, 1167, 281, 13, 1076, 338, 501, 680, 205, 322, 271, 1451, 767, 162, 258, 706, 92, 758, 1293, 443, 47, 404, 1446, 498, 292, 44, 223, 1408, 731, 321, 1586, 1220, 1012, 808, 729, 186, 1588, 859, 1378, 1561, 145, 847, 1303, 1062, 516, 1416, 720, 250, 962, 1127, 1611, 1401, 1095, 134, 1583, 1137, 1059, 634, 777, 1042, 1467, 546, 563, 1000, 17, 299, 1166, 366, 39, 348, 170, 1549, 151, 1335, 1495, 1264, 876, 1180, 1052, 737, 1081, 1305, 1209, 483, 507, 1412, 1334, 1285, 224, 738, 1240, 1502, 727, 1613, 678, 1492, 1009, 1379, 1585, 905, 1410, 100, 1509, 924, 1620, 687, 308, 1403, 1188, 177, 1074, 790, 1046, 1193};
        boolean flag = checker.checkDuplicate(arr);
        System.out.println("是否有重复值：" + flag);
    }

}
